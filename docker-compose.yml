version: '3.7'

services:
  postgresql:
    build:
      context: "."  
      dockerfile: Dockerfile_postgres
    ports:
      - "5432:5432"
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: pcrs
      HTTP_PROXY: ${HTTP_PROXY}
      HTTPS_PROXY: ${HTTPS_PROXY}
    # volumes:
    #   - ./data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "root"]
      interval: 5s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer
    restart: always
    depends_on:
      - postgresql
    ports:
      - 8080:8080
  
  demo-pcrs:
    container_name: demo-pcrs
    command: python3 run_prod.py
    build:
      context: "."  
      dockerfile: Dockerfile
      # args:    
      #   - http_proxy
      #   - https_proxy
    environment:
      HTTP_PROXY: ${HTTP_PROXY}
      HTTPS_PROXY: ${HTTPS_PROXY}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${DATABASE}
      SCHEMA_DALLE: ${SCHEMA_DALLE}
      SCHEMA_CHANTIER: ${SCHEMA_CHANTIER}
      HOST_SERVEUR: ${HOST_SERVEUR}
      HOST: ${HOST}
    ports:
      - '5000:5000'
    restart: on-failure
    depends_on:
      postgresql:
        condition: service_healthy



  # postgresql:
  #   image: postgres:latest
  #   restart: always
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_DB: ${DATABASE}
  #     SCHEMA_DALLE: ${SCHEMA_DALLE}
  #     SCHEMA_CHANTIER: ${SCHEMA_CHANTIER}
  #     HOST_SERVEUR: ${HOST_SERVEUR}
  #     HOST: ${HOST}
  #     HTTP_PROXY: ${HTTP_PROXY}
  #     HTTPS_PROXY: ${HTTPS_PROXY}
  #   ports:
  #     - 5432:5432
  #   volumes:
  #     - ./data:/var/lib/postgresql/data

  # pgadmin:
  #   image: dpage/pgadmin4
  #   restart: always
  #   environment:
  #     - PGADMIN_DEFAULT_EMAIL=louis.ardilly@yahoo.fr
  #     - PGADMIN_DEFAULT_PASSWORD=${POSTGRES_PASSWORD}
  #     - HTTP_PROXY=${HTTP_PROXY}
  #     - HTTPS_PROXY=${HTTPS_PROXY}
  #   ports:
  #     - "8080:80"
  #   links:
  #     - postgresql:postgres
  #   depends_on:
  #     - postgresql