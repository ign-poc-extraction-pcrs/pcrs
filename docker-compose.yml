version: '3.7'

services:
  db:
    image: kartoza/postgis:15-3.3
    # volumes:
    #   - postgis-data:/var/lib/postgresql
    #   - dbbackups:/backups
    environment:
      # If you need to create multiple database you can add coma separated databases eg gis,data
      - POSTGRES_DB=${PGDATABASE}
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASS=${PGPASSWORD}
      - ALLOW_IP_RANGE=0.0.0.0/0
      # Add extensions you need to be enabled by default in the DB. Default are the five specified below
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,postgis_raster,pgrouting
      - RUN_AS_ROOT=true
    ports:
      - "5432"
    restart: on-failure
    healthcheck:
      test: "PGPASSWORD=$PGPASSWORD pg_isready -h 127.0.0.1 -U $PGUSER -d $PGDATABASE"
      interval: 10s
      timeout: 10s
      retries: 4

  adminer:
    image: adminer
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 8080:8080
  
  demo-pcrs:
    container_name: demo-pcrs
    build:
      context: "."  
      dockerfile: Dockerfile
      args:    
        - http_proxy
        - https_proxy
    environment:
      HTTP_PROXY: ${HTTP_PROXY}
      HTTPS_PROXY: ${HTTPS_PROXY}
      PGUSER: ${PGUSER}
      PGPASSWORD: ${PGPASSWORD}
      PGDATABASE: ${PGDATABASE}
      SCHEMA_DALLE: ${SCHEMA_DALLE}
      SCHEMA_CHANTIER: ${SCHEMA_CHANTIER}
      HOST_SERVEUR: ${HOST_SERVEUR}
      PGHOST: ${PGHOST}
      PGPORT: ${PGPORT}
    ports:
      - '5000:5000'
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy


